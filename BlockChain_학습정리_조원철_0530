6. 비트코인 스마트 거래의 구조

       ① 비트코인 거래
참여자들이 비트코인 통화 등 가치(value)를 주고 받고 상호 인정하는 행위를 규정하는 데이터 구조  
블록체인에 공개적으로 투명하게 저장되는 항목  
중요 데이터(문서) 저장 거래도 가능

       ② 비트코인 지불 거래
입력값(input value)으로 표현되는 자금원(fundsource)로부터
출력값(output value)으로 표현되는 목적지(funddestination)까지 자금(funds)을 전달하는 행위를 규정
입력값은 자신이 소유권을 가지고 있는 이전 거래의 출 력값(예, 자신의 주소로 출력된 비트코인) 중에, 아직 소비되지 않은 출력값(UTXO – Unspent Transaction Output)을 해시 포인터(hash pointer)로 참조함으로써 설정
UTXO의 소유권은 해당 주소에 대응되는 개인키로 작 성된 서명을 거래의 입력값에 포함시킴으로써 증명  
특정 거래에서 한번 설정된 입력값은 반드시 해당 거래 에서 전부 소비(자금 정보가 노출되는 프라이버시 문 제 방지)
거래 검증을 수행하는 참여자(채굴자, 풀 노드)들은 UTXO의 신속한 검색을 위해 블록체인 상의 전체 UTXO들을 하드 디스크가 아닌 RAM 메모리 풀 (memory pool)로 유지

       ③ 거래 수수료
거래가 처리하는 자금의 크기(transaction fund size)가 아니라 거래의 데이터 크기(transaction data size)에 따 라 계산  
킬로 바이트에 대한 단위 거래 수수료가 먼저 설정되고, 여기에 킬로 바이트 단위의 거래 크기가 곱해져 거래 수수료로 계산
단위 수수료 설정 : 시장에서 형성  
거래 수수료 표시 = 입력값 총합 – 출력값 총합

       ④ 거래 자료 구조


       ⑤ 코인베이스 거래
채굴자에게 네트워크가 자동으로 신규 비트코인을 지 불하는 거래
코인베이스 거래의 입력값

                 c. 출력값 구조
                   

       ⑥ 잠금 스크립트
해당 출력값을 소비하기 위해 충족시켜야 하는 조건을 기술한 간단한 실행
프로그램  예 : 주소에 대응되는 서명과 공개키를 제시하시오.
scriptPubKey = DUP HASH160 EQUALVERIFY CHECKSIG

       ⑦ 입력값 구조
              


       ⑧ 해제 스크립트(예) : 서명과 공개키를 데이터로 제공
scriptSig =  <sig><pubK>

       ⑨ 거래 검증
풀 노드(채굴 노드)가 새로운 거래를 검증할 때 
해제 스크립트와 잠금 스크립트를 연결한 후 
연결된 프로그램을 실행하고 
실행 결과에 따라 거래의 적합 여부를 판단

       ⑩ 거래 실행



       ⑪ 스택
입력되는 데이터의 순서와 반대의 순서로 입력된 데이 터가 출력되는 자료 구조  
푸시(push) 동작 : 스택 자료 구조에 데이터를 입력하 는 동작  
팝(pop) 동작 : 입력된 데이터를 출력하는 동작

       ⑫ 비트코인 스택 언어
스택 자료 구조에 데이터를 입출력하면서 
프로그램에 기술된 각 명령을 순서대로 한번씩만 수 행하는 제한적인 기능의 단순한 언어 
일련의 명령들을 반복해서 수행하는 루프(loop) 명령 미지원
튜링 불완전(Turing-incomplete) 언어 : 루프 기능을 제 외한 프로그래밍 언어로써 불완전한 언어  
풀 노드들이 거래를 검증할 때 지나치게 많은 시간이 소요되어 비트코인 네트워크의 성능이 낮아지는 것을 방지  DoS 공격 방어



7. 비트코인 작업 증명과 블록 인센티브

       ① 비트코인 블록 채굴 정책
목표 : 채굴자들간에 블록에 대한 합의
수단 : 작업 증명 정책(proof-of-work policy), 인센티브 정책(incentive policy) 

       ② 블록 채굴과 인센티브
블록 보상(block reward)  
거래 수수료(transaction fees)
블록 채굴에 성공한 채굴자에게 네트워크가 지급  
인플레이션(inflation)을 방지하기 위해 시간이 감에 따 라 축소되도록 설계  
50 BTC로부터 시작하여, 210,000 블록마다(약 4년 마 다) 보상 금액이 1/2로 축소  
2140년 경이 되면 비트코인 총 발행량은 약 21,000,000 BTC에 이르게 되고 더 이상 신규 비트코인 발행을 멈춤

       ③ 블록 보상을 통한 비트코인 발행 추세


       ④ 거래 수수료
거래 수수료 보상 = (블록의 전체 거래의 입력값 총합 – 블록의 전체 거래의 출력값 총합)

       ⑤ 코인베이스 거래
블록 채굴에 대한 전체 인센티브는 해당 블록에 저장되 는 첫번째 거래인 코인베이스 거래에 의해 지불  
출력값으로 블록 보상과 수수료 보상을 합친 금액이 채 굴자의 주소로 지불

       ⑥ 작업 증명 방법
채굴자는 블록 헤더에 대한 HSA256 해시값이 목표보 다 작아질 때까지 블록 헤더의 일부 값(넌스)을 변경 하면서 블록헤더의 해시값 계산을 반복
해시값이 난이도 목표 필드의 값보다 작은 값이 발견 되면 작업 증명에 성공(이 때의 넌스가 작업 증명 결 과)  
채굴된 블록을 수신한 다른 채굴자는 블록 헤더의 HSA256 해시값이 블록 헤더의 난이도 목표보다 작은 지만 확인함으로써 작업 증명을 검증

       ⑦ 해시 함수의 일방향성
어떤 데이터에 대해 해시 함수를 적용하여 얻은 해시 값으로부터 원래 데이터를 추론할 수 없음을 보장하 는 성질 
채굴자가 난이도 목표보다 작은 해시값을 미리 정해 놓고 여기에 맞는 넌스를 추론하는 것이 불가능

       ⑧ 해시 함수의 일방향성
어떤 데이터에 대해 해시 함수를 적용하여 얻은 해시 값으로부터 원래 데이터를 추론할 수 없음을 보장하 는 성질 
채굴자가 난이도 목표보다 작은 해시값을 미리 정해 놓고 여기에 맞는 넌스를 추론하는 것이 불가능

       ⑨ 해시 함수의 임의성
해시값과 원래값의 연관성 추론이 불가능  
해시 함수의 반복 계산 외의 다른 방법으로 목표 난이 도 보다 작은 해시값을 찾을 수 없음  
작업 증명의 문제는 확률의 문제  해시 함수 적용 회 수가 많은 채굴자가 적용 횟수가 적은 채굴자보다 반드 시 빨리 작업 증명에 성공하는 것을 보장하는 것은 아님

       ⑩ 난이도 조정
작업 증명에 걸리는 시간이 평균 10분으로 유지되도록 설정  
작업 증명에 걸리는 시간은 작업 증명에 투입되는 총 해시율에 의해 결정  
총 해시율 = 모든 채굴자의 해시율의 총합  
채굴 수익율이 높아지면 총 해시율은 증가, 채굴 수익 율이 낮아지면 총 해시율 감소

       ⑪ 블록 헤더 변경
블록 헤더에 대한 해시값 계산을 통해 수행되므로 채굴 자는 블록 헤더의 일부 내용을 변경하면서 
해시 함수 적용을 반복  해시 함수 적용 시마다 변경하는 필드가 넌스(nonce)  
넌스를 2 32번 모두 변경해도 작업 증명을 완료하지 못 하는 경우가 발생  
코인베이스 거래의 데이터 필드의 일부(8 바이트)를 추 가적인 넌스로 활용  
작업 증명에서 변경시킬 수 있는 필드 : 넌스 4 바이트 + 코인베이스 데이터의 일부인 8 바이트

       ⑫ 채굴풀
특별한 풀-채굴 프로토콜을 사용하여 많은 수의 채굴 자들이 협력하여 단일 작업 증명을 수행  
각 채굴자는 자신의 채굴 기계를 풀 서버에 접속하고, 풀 서버가 할당한 영역에서 작업 증명을 수행  
풀 서버에 연결된 채굴자 중 하나가 작업 증명에 성공 하면 그 결과를 풀 서버에 전달  
풀 서버는 그 결과로 블록 생성을 완료하여 네트워크에 전파함으로써 블록 인센티브를 지급  
블록 인센티브는 채굴 풀에 참여한 모든 채굴자에게 기 여 정도에 비례하여 나누어 지급
